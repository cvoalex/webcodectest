syntax = "proto3";

package lipsyncsrv;

option go_package = "./pb";

// Single inference request
message InferenceRequest {
    string model_name = 1;
    int32 frame_id = 2;
    string audio_data = 3; // base64 encoded WAV data
}

// Single inference response
message InferenceResponse {
    bool success = 1;
    string error = 2;
    bytes prediction_data = 3;
    repeated float bounds = 4;
    string model_name = 5;
    string prediction_shape = 6;
    int32 frame_id = 7;
}

// Batch inference request
message BatchInferenceRequest {
    string model_name = 1;
    repeated int32 frame_ids = 2;
    string audio_data = 3; // base64 encoded WAV data
}

// Batch inference response
message BatchInferenceResponse {
    repeated InferenceResponse responses = 1;
}

// Health check request
message HealthRequest {}

// Health check response
message HealthResponse {
    string status = 1;
    string version = 2;
}

// Service definition
service LipSyncService {
    rpc GenerateInference(InferenceRequest) returns (InferenceResponse);
    rpc GenerateBatchInference(BatchInferenceRequest) returns (BatchInferenceResponse);
    rpc CheckHealth(HealthRequest) returns (HealthResponse);
}
